"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./utils/activitySuitability.ts":
/*!**************************************!*\
  !*** ./utils/activitySuitability.ts ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   evaluateCondition: () => (/* binding */ evaluateCondition),\n/* harmony export */   extractWeatherKey: () => (/* binding */ extractWeatherKey),\n/* harmony export */   getActivitySuitability: () => (/* binding */ getActivitySuitability),\n/* harmony export */   hasGoodConditions: () => (/* binding */ hasGoodConditions),\n/* harmony export */   hasPerfectConditions: () => (/* binding */ hasPerfectConditions),\n/* harmony export */   hasPoorCondition: () => (/* binding */ hasPoorCondition),\n/* harmony export */   parseConditionString: () => (/* binding */ parseConditionString),\n/* harmony export */   safeEvaluate: () => (/* binding */ safeEvaluate)\n/* harmony export */ });\n// utils/activitySuitability.ts\n/**\n * Extracts the weather key name from a condition string.\n * (e.g., \"temperature>15\" -> \"temperature\")\n */ function extractWeatherKey(condition) {\n    const rangeMatch = condition.match(/^([a-zA-Z_]+)=(-?\\d+(?:\\.\\d+)?)\\.\\.(-?\\d+(?:\\.\\d+)?)/);\n    if (rangeMatch) return rangeMatch[1];\n    const opMatch = condition.match(/^([a-zA-Z_]+)[<>=!]=?/);\n    if (opMatch) return opMatch[1];\n    return condition;\n}\n/**\n * Parses a condition string into key/operator/value\n */ function parseConditionString(condition) {\n    const rangeMatch = condition.match(/^([a-zA-Z_]+)=(-?\\d+(?:\\.\\d+)?)\\.\\.(-?\\d+(?:\\.\\d+)?)/);\n    if (rangeMatch) {\n        return {\n            key: rangeMatch[1],\n            operator: 'range',\n            min: parseFloat(rangeMatch[2]),\n            max: parseFloat(rangeMatch[3])\n        };\n    }\n    const opMatch = condition.match(/^([a-zA-Z_]+)([<>=!]=?|==)(-?\\d+(?:\\.\\d+)?)/);\n    if (opMatch) {\n        return {\n            key: opMatch[1],\n            operator: opMatch[2],\n            value: parseFloat(opMatch[3])\n        };\n    }\n    return null;\n}\n/**\n * Evaluates a parsed condition against weather\n */ function evaluateCondition(condition, weather) {\n    const parsed = parseConditionString(condition);\n    if (!parsed) return false;\n    const weatherValue = weather[parsed.key];\n    if (weatherValue === undefined || weatherValue === null) return false;\n    if (parsed.operator === 'range') {\n        return weatherValue >= parsed.min && weatherValue <= parsed.max;\n    }\n    switch(parsed.operator){\n        case '>':\n            return weatherValue > parsed.value;\n        case '>=':\n            return weatherValue >= parsed.value;\n        case '<':\n            return weatherValue < parsed.value;\n        case '<=':\n            return weatherValue <= parsed.value;\n        case '=':\n        case '==':\n            return weatherValue === parsed.value;\n        case '!=':\n            return weatherValue !== parsed.value;\n        default:\n            console.warn(\"Unknown operator: \".concat(parsed.operator));\n            return false;\n    }\n}\n/**\n * Gracefully evaluates a condition, skipping missing weather fields.\n */ function safeEvaluate(condition, weather) {\n    const key = extractWeatherKey(condition);\n    const value = weather[key];\n    if (value === undefined || value === null) return true; // Treat missing fields as neutral\n    return evaluateCondition(condition, weather);\n}\n/**\n * Returns true if any poor condition matches.\n */ function hasPoorCondition(activity, weather) {\n    var _activity_poorConditions;\n    return !!((_activity_poorConditions = activity.poorConditions) === null || _activity_poorConditions === void 0 ? void 0 : _activity_poorConditions.some((cond)=>safeEvaluate(cond, weather)));\n}\n/**\n * Returns true if all perfect conditions with known weather keys match.\n */ function hasPerfectConditions(activity, weather) {\n    var _activity_perfectConditions;\n    return !!((_activity_perfectConditions = activity.perfectConditions) === null || _activity_perfectConditions === void 0 ? void 0 : _activity_perfectConditions.length) && activity.perfectConditions.every((cond)=>safeEvaluate(cond, weather));\n}\n/**\n * Returns true if all good conditions with known weather keys match.\n */ function hasGoodConditions(activity, weather) {\n    var _activity_goodConditions;\n    return !!((_activity_goodConditions = activity.goodConditions) === null || _activity_goodConditions === void 0 ? void 0 : _activity_goodConditions.length) && activity.goodConditions.every((cond)=>safeEvaluate(cond, weather));\n}\n/**\n * Returns the suitability level of an activity for the given weather.\n */ function getActivitySuitability(activity, weather) {\n    if (activity.weatherSensitive === false) return \"indoor\";\n    if (hasPoorCondition(activity, weather)) return \"excluded\";\n    if (hasPerfectConditions(activity, weather)) return \"perfect\";\n    if (hasGoodConditions(activity, weather)) return \"good\";\n    if ((!activity.goodConditions || activity.goodConditions.length === 0) && (!activity.perfectConditions || activity.perfectConditions.length === 0)) {\n        return \"acceptable\";\n    }\n    return \"excluded\";\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./utils/activitySuitability.ts\n"));

/***/ }),

/***/ "(pages-dir-browser)/./utils/getSuggestionsByDay.ts":
/*!**************************************!*\
  !*** ./utils/getSuggestionsByDay.ts ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSuggestionsByDay: () => (/* binding */ getSuggestionsByDay)\n/* harmony export */ });\n/* harmony import */ var _activitySuitability__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./activitySuitability */ \"(pages-dir-browser)/./utils/activitySuitability.ts\");\n\n// --- Main Function ---\n/**\n * Suggests up to 10 activities per day:\n * 1) Outdoor with perfect conditions (land & marine aware)\n * 2) Outdoor with good/acceptable conditions\n * 3) Indoor alternatives\n * 4) Indoor, weather-irrelevant interests\n */ function getSuggestionsByDay(param) {\n    let { forecast = [], interests = [], activities = [] } = param;\n    if (!Array.isArray(activities) || !Array.isArray(forecast)) return [];\n    return forecast.map((day)=>{\n        // --- Merge land and marine weather ---\n        const marine = Array.isArray(day.marine) && day.marine.length > 0 ? day.marine[0] : {};\n        const weather = {\n            ...day.weather,\n            ...marine\n        };\n        const currentMonth = new Date(day.date).getMonth() + 1;\n        const selected = activities.filter((a)=>interests.includes(a.id) && (!a.seasonalMonths || a.seasonalMonths.includes(currentMonth)));\n        const perfect = [];\n        const good = [];\n        const indoorAlternatives = [];\n        const indoor = [];\n        // -- Evaluate activity suitability --\n        for (const activity of selected){\n            const { id, weatherSensitive, indoorAlternative } = activity;\n            const suitability = (0,_activitySuitability__WEBPACK_IMPORTED_MODULE_0__.getActivitySuitability)(activity, weather);\n            if (suitability === 'excluded') continue;\n            if (suitability === 'perfect') {\n                perfect.push({\n                    activityId: id,\n                    evaluation: 'perfect'\n                });\n            } else if (suitability === 'good') {\n                good.push({\n                    activityId: id,\n                    evaluation: 'good'\n                });\n            } else if (suitability === 'acceptable') {\n                good.push({\n                    activityId: id,\n                    evaluation: 'acceptable'\n                });\n            } else if (suitability === 'indoor') {\n                indoor.push({\n                    activityId: id,\n                    evaluation: 'indoor'\n                });\n            }\n            if (weatherSensitive && indoorAlternative) indoorAlternatives.push(indoorAlternative);\n        }\n        // -- Order suggestions: perfect, good/acceptable, indoor alt, then indoor --\n        const suggestions = [];\n        const seen = new Set();\n        function add(list) {\n            for (const i of list){\n                if (!seen.has(i.activityId) && suggestions.length < 10) {\n                    seen.add(i.activityId);\n                    suggestions.push(i);\n                }\n            }\n        }\n        add(perfect);\n        add(good);\n        // Add indoor alternatives (limit to 10)\n        if (suggestions.length < 10 && indoorAlternatives.length > 0) {\n            for (const alt of indoorAlternatives){\n                const altActivity = activities.find((a)=>a.id === alt || a.name === alt);\n                if (altActivity && !seen.has(altActivity.id)) {\n                    suggestions.push({\n                        activityId: altActivity.id,\n                        evaluation: 'indoorAlternative'\n                    });\n                    seen.add(altActivity.id);\n                    if (suggestions.length >= 10) break;\n                }\n            }\n        }\n        if (suggestions.length < 10) {\n            for (const i of indoor){\n                if (!seen.has(i.activityId)) {\n                    suggestions.push(i);\n                    seen.add(i.activityId);\n                    if (suggestions.length >= 10) break;\n                }\n            }\n        }\n        return {\n            date: day.date,\n            suggestions\n        };\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./utils/getSuggestionsByDay.ts\n"));

/***/ })

});