"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./utils/eveningScoring.ts":
/*!*********************************!*\
  !*** ./utils/eveningScoring.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyEveningBonus: () => (/* binding */ applyEveningBonus),\n/* harmony export */   generateEveningContext: () => (/* binding */ generateEveningContext)\n/* harmony export */ });\n// src/utils/eveningScoring.ts\n/**\n * Returns a multiplier for evening activities:\n * - Base indoor boost after 18:00\n * - Activity-specific evening bonuses at appropriate hours\n * - Context-tag matching bonus (weekday tags weighted heavily in matchScore)\n * - Extra weekend boost for “going_to_pub” on Friday/Saturday evenings\n * - Clamped so overall multiplier ≤ 2.0\n */ function applyEveningBonus(activity, hour, contextTags) {\n    let multiplier = 1.0;\n    // 1. Base boost for all indoor activities after 18:00\n    if (!activity.weatherSensitive && hour >= 18) {\n        multiplier *= 1.25;\n    }\n    // 2. Activity-specific evening multipliers\n    const eveningBonuses = {\n        'going_to_pub': hour >= 17 && hour <= 23 ? 1.0 : 1.0,\n        'watch_a_movie': hour >= 19 && hour <= 23 ? 1.3 : 1.0,\n        'reading': hour >= 20 && hour <= 23 ? 1.2 : 1.0,\n        'yoga': hour >= 18 && hour <= 21 ? 1.3 : 1.0,\n        'meditation': hour >= 19 && hour <= 22 ? 1.3 : 1.0,\n        'cooking': hour >= 17 && hour <= 20 ? 1.2 : 1.0,\n        'playing_cards': hour >= 19 && hour <= 23 ? 1.3 : 1.0,\n        'crafts': hour >= 19 && hour <= 22 ? 1.2 : 1.0,\n        'playing_records': hour >= 18 && hour <= 23 ? 1.2 : 1.0\n    };\n    multiplier *= eveningBonuses[activity.id] || 1.0;\n    // 3. Tag-match bonus (ensure matchScore weights weekdays heavily)\n    const tagMatches = (activity.tags || []).filter((tag)=>contextTags.includes(tag)).length;\n    multiplier *= 1.0 + Math.min(tagMatches * 0.1, 0.5);\n    // 4. Extra weekend pub boost on Friday/Saturday evenings\n    const today = contextTags[0]; // e.g. \"Friday\"\n    if (activity.id === 'going_to_pub' && (today === 'Friday' || today === 'Saturday') && hour >= 17 && hour <= 23) {\n        multiplier *= 1.3;\n    }\n    // 5. Clamp multiplier to maximum of 2.0\n    return Math.min(multiplier, 2.0);\n}\n/**\n * Builds evening-specific context tags based on hour and day.\n * Includes phases and day-specific preferences like 'pub', 'celebration', etc.\n */ function generateEveningContext(hour, day) {\n    const baseContext = [\n        day,\n        'evening',\n        'relaxation',\n        'family',\n        'cultural',\n        'leisure',\n        'home',\n        'social'\n    ];\n    // Time-of-evening phases\n    if (hour >= 17 && hour < 19) {\n        baseContext.push('early_evening', 'social', 'dining', 'transition_time');\n    } else if (hour >= 19 && hour < 21) {\n        baseContext.push('prime_evening', 'entertainment', 'social_gathering', 'peak_activity');\n    } else if (hour >= 21) {\n        baseContext.push('late_evening', 'wind_down', 'quiet_activities', 'preparation');\n    }\n    // Day-specific evening tags\n    const daySpecific = {\n        'Friday': [\n            'going_out',\n            'social',\n            'celebration',\n            'pub'\n        ],\n        'Saturday': [\n            'leisure',\n            'family_time',\n            'extended_activities'\n        ],\n        'Sunday': [\n            'preparation',\n            'relaxation',\n            'early_rest'\n        ],\n        'Monday': [\n            'recovery',\n            'light_activity',\n            'week_planning'\n        ],\n        'Tuesday': [\n            'mid_week_social',\n            'hobby_time'\n        ],\n        'Wednesday': [\n            'mid_week_break',\n            'personal_time'\n        ],\n        'Thursday': [\n            'anticipation',\n            'social_prep'\n        ]\n    };\n    if (daySpecific[day]) {\n        baseContext.push(...daySpecific[day]);\n    }\n    return baseContext;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3V0aWxzL2V2ZW5pbmdTY29yaW5nLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsOEJBQThCO0FBRzlCOzs7Ozs7O0NBT0MsR0FDTSxTQUFTQSxrQkFDZEMsUUFBc0IsRUFDdEJDLElBQVksRUFDWkMsV0FBcUI7SUFFckIsSUFBSUMsYUFBYTtJQUVqQixzREFBc0Q7SUFDdEQsSUFBSSxDQUFDSCxTQUFTSSxnQkFBZ0IsSUFBSUgsUUFBUSxJQUFJO1FBQzVDRSxjQUFjO0lBQ2hCO0lBRUEsMkNBQTJDO0lBQzNDLE1BQU1FLGlCQUF5QztRQUM3QyxnQkFBZ0IsUUFBUyxNQUFNSixRQUFRLEtBQU0sTUFBTTtRQUNuRCxpQkFBaUIsUUFBUyxNQUFNQSxRQUFRLEtBQU0sTUFBTTtRQUNwRCxXQUFpQixRQUFTLE1BQU1BLFFBQVEsS0FBTSxNQUFNO1FBQ3BELFFBQWlCLFFBQVMsTUFBTUEsUUFBUSxLQUFNLE1BQU07UUFDcEQsY0FBaUIsUUFBUyxNQUFNQSxRQUFRLEtBQU0sTUFBTTtRQUNwRCxXQUFpQixRQUFTLE1BQU1BLFFBQVEsS0FBTSxNQUFNO1FBQ3BELGlCQUFpQixRQUFTLE1BQU1BLFFBQVEsS0FBTSxNQUFNO1FBQ3BELFVBQWlCLFFBQVMsTUFBTUEsUUFBUSxLQUFNLE1BQU07UUFDcEQsbUJBQW1CLFFBQVMsTUFBTUEsUUFBUSxLQUFNLE1BQU07SUFDeEQ7SUFDQUUsY0FBY0UsY0FBYyxDQUFDTCxTQUFTTSxFQUFFLENBQUMsSUFBSTtJQUU3QyxrRUFBa0U7SUFDbEUsTUFBTUMsYUFBYSxDQUFDUCxTQUFTUSxJQUFJLElBQUksRUFBRSxFQUFFQyxNQUFNLENBQUNDLENBQUFBLE1BQU9SLFlBQVlTLFFBQVEsQ0FBQ0QsTUFBTUUsTUFBTTtJQUN4RlQsY0FBYyxNQUFNVSxLQUFLQyxHQUFHLENBQUNQLGFBQWEsS0FBSztJQUUvQyx5REFBeUQ7SUFDekQsTUFBTVEsUUFBUWIsV0FBVyxDQUFDLEVBQUUsRUFBRSxnQkFBZ0I7SUFDOUMsSUFDRUYsU0FBU00sRUFBRSxLQUFLLGtCQUNmUyxDQUFBQSxVQUFVLFlBQVlBLFVBQVUsVUFBUyxLQUMxQ2QsUUFBUSxNQUFNQSxRQUFRLElBQ3RCO1FBQ0FFLGNBQWM7SUFDaEI7SUFFQSx3Q0FBd0M7SUFDeEMsT0FBT1UsS0FBS0MsR0FBRyxDQUFDWCxZQUFZO0FBQzlCO0FBRUE7OztDQUdDLEdBQ00sU0FBU2EsdUJBQXVCZixJQUFZLEVBQUVnQixHQUFXO0lBQzlELE1BQU1DLGNBQWM7UUFBQ0Q7UUFBSztRQUFXO1FBQWM7UUFBVTtRQUFZO1FBQVc7UUFBUTtLQUFTO0lBRXJHLHlCQUF5QjtJQUN6QixJQUFJaEIsUUFBUSxNQUFNQSxPQUFPLElBQUk7UUFDM0JpQixZQUFZQyxJQUFJLENBQUMsaUJBQWlCLFVBQVUsVUFBVTtJQUN4RCxPQUFPLElBQUlsQixRQUFRLE1BQU1BLE9BQU8sSUFBSTtRQUNsQ2lCLFlBQVlDLElBQUksQ0FBQyxpQkFBaUIsaUJBQWlCLG9CQUFvQjtJQUN6RSxPQUFPLElBQUlsQixRQUFRLElBQUk7UUFDckJpQixZQUFZQyxJQUFJLENBQUMsZ0JBQWdCLGFBQWEsb0JBQW9CO0lBQ3BFO0lBRUEsNEJBQTRCO0lBQzVCLE1BQU1DLGNBQXdDO1FBQzVDLFVBQWE7WUFBQztZQUFhO1lBQVU7WUFBZTtTQUFNO1FBQzFELFlBQWE7WUFBQztZQUFXO1lBQWU7U0FBc0I7UUFDOUQsVUFBYTtZQUFDO1lBQWU7WUFBYztTQUFhO1FBQ3hELFVBQWE7WUFBQztZQUFZO1lBQWtCO1NBQWdCO1FBQzVELFdBQWE7WUFBQztZQUFtQjtTQUFhO1FBQzlDLGFBQWE7WUFBQztZQUFrQjtTQUFnQjtRQUNoRCxZQUFhO1lBQUM7WUFBZ0I7U0FBYztJQUM5QztJQUVBLElBQUlBLFdBQVcsQ0FBQ0gsSUFBSSxFQUFFO1FBQ3BCQyxZQUFZQyxJQUFJLElBQUlDLFdBQVcsQ0FBQ0gsSUFBSTtJQUN0QztJQUVBLE9BQU9DO0FBQ1QiLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYW1pYW5yYWZmZXJ0eS9Qcm9qZWN0cy9Xb3ROb3cvdXRpbHMvZXZlbmluZ1Njb3JpbmcudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3V0aWxzL2V2ZW5pbmdTY29yaW5nLnRzXG5pbXBvcnQgeyBBY3Rpdml0eVR5cGUgfSBmcm9tICcuLi9kYXRhL2FjdGl2aXR5VHlwZXMnO1xuXG4vKipcbiAqIFJldHVybnMgYSBtdWx0aXBsaWVyIGZvciBldmVuaW5nIGFjdGl2aXRpZXM6XG4gKiAtIEJhc2UgaW5kb29yIGJvb3N0IGFmdGVyIDE4OjAwXG4gKiAtIEFjdGl2aXR5LXNwZWNpZmljIGV2ZW5pbmcgYm9udXNlcyBhdCBhcHByb3ByaWF0ZSBob3Vyc1xuICogLSBDb250ZXh0LXRhZyBtYXRjaGluZyBib251cyAod2Vla2RheSB0YWdzIHdlaWdodGVkIGhlYXZpbHkgaW4gbWF0Y2hTY29yZSlcbiAqIC0gRXh0cmEgd2Vla2VuZCBib29zdCBmb3Ig4oCcZ29pbmdfdG9fcHVi4oCdIG9uIEZyaWRheS9TYXR1cmRheSBldmVuaW5nc1xuICogLSBDbGFtcGVkIHNvIG92ZXJhbGwgbXVsdGlwbGllciDiiaQgMi4wXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhcHBseUV2ZW5pbmdCb251cyhcbiAgYWN0aXZpdHk6IEFjdGl2aXR5VHlwZSxcbiAgaG91cjogbnVtYmVyLFxuICBjb250ZXh0VGFnczogc3RyaW5nW11cbik6IG51bWJlciB7XG4gIGxldCBtdWx0aXBsaWVyID0gMS4wO1xuXG4gIC8vIDEuIEJhc2UgYm9vc3QgZm9yIGFsbCBpbmRvb3IgYWN0aXZpdGllcyBhZnRlciAxODowMFxuICBpZiAoIWFjdGl2aXR5LndlYXRoZXJTZW5zaXRpdmUgJiYgaG91ciA+PSAxOCkge1xuICAgIG11bHRpcGxpZXIgKj0gMS4yNTtcbiAgfVxuXG4gIC8vIDIuIEFjdGl2aXR5LXNwZWNpZmljIGV2ZW5pbmcgbXVsdGlwbGllcnNcbiAgY29uc3QgZXZlbmluZ0JvbnVzZXM6IFJlY29yZDxzdHJpbmcsIG51bWJlcj4gPSB7XG4gICAgJ2dvaW5nX3RvX3B1Yic6IChob3VyID49IDE3ICYmIGhvdXIgPD0gMjMpID8gMS4wIDogMS4wLCAgICAgICAgLy8gYmFzZTsgcmVhbCBib29zdCB2aWEgd2Vla2RheSBib29zdFxuICAgICd3YXRjaF9hX21vdmllJzogKGhvdXIgPj0gMTkgJiYgaG91ciA8PSAyMykgPyAxLjMgOiAxLjAsXG4gICAgJ3JlYWRpbmcnOiAgICAgICAoaG91ciA+PSAyMCAmJiBob3VyIDw9IDIzKSA/IDEuMiA6IDEuMCxcbiAgICAneW9nYSc6ICAgICAgICAgIChob3VyID49IDE4ICYmIGhvdXIgPD0gMjEpID8gMS4zIDogMS4wLFxuICAgICdtZWRpdGF0aW9uJzogICAgKGhvdXIgPj0gMTkgJiYgaG91ciA8PSAyMikgPyAxLjMgOiAxLjAsXG4gICAgJ2Nvb2tpbmcnOiAgICAgICAoaG91ciA+PSAxNyAmJiBob3VyIDw9IDIwKSA/IDEuMiA6IDEuMCxcbiAgICAncGxheWluZ19jYXJkcyc6IChob3VyID49IDE5ICYmIGhvdXIgPD0gMjMpID8gMS4zIDogMS4wLFxuICAgICdjcmFmdHMnOiAgICAgICAgKGhvdXIgPj0gMTkgJiYgaG91ciA8PSAyMikgPyAxLjIgOiAxLjAsXG4gICAgJ3BsYXlpbmdfcmVjb3Jkcyc6IChob3VyID49IDE4ICYmIGhvdXIgPD0gMjMpID8gMS4yIDogMS4wLFxuICB9O1xuICBtdWx0aXBsaWVyICo9IGV2ZW5pbmdCb251c2VzW2FjdGl2aXR5LmlkXSB8fCAxLjA7XG5cbiAgLy8gMy4gVGFnLW1hdGNoIGJvbnVzIChlbnN1cmUgbWF0Y2hTY29yZSB3ZWlnaHRzIHdlZWtkYXlzIGhlYXZpbHkpXG4gIGNvbnN0IHRhZ01hdGNoZXMgPSAoYWN0aXZpdHkudGFncyB8fCBbXSkuZmlsdGVyKHRhZyA9PiBjb250ZXh0VGFncy5pbmNsdWRlcyh0YWcpKS5sZW5ndGg7XG4gIG11bHRpcGxpZXIgKj0gMS4wICsgTWF0aC5taW4odGFnTWF0Y2hlcyAqIDAuMSwgMC41KTtcblxuICAvLyA0LiBFeHRyYSB3ZWVrZW5kIHB1YiBib29zdCBvbiBGcmlkYXkvU2F0dXJkYXkgZXZlbmluZ3NcbiAgY29uc3QgdG9kYXkgPSBjb250ZXh0VGFnc1swXTsgLy8gZS5nLiBcIkZyaWRheVwiXG4gIGlmIChcbiAgICBhY3Rpdml0eS5pZCA9PT0gJ2dvaW5nX3RvX3B1YicgJiZcbiAgICAodG9kYXkgPT09ICdGcmlkYXknIHx8IHRvZGF5ID09PSAnU2F0dXJkYXknKSAmJlxuICAgIGhvdXIgPj0gMTcgJiYgaG91ciA8PSAyM1xuICApIHtcbiAgICBtdWx0aXBsaWVyICo9IDEuMztcbiAgfVxuXG4gIC8vIDUuIENsYW1wIG11bHRpcGxpZXIgdG8gbWF4aW11bSBvZiAyLjBcbiAgcmV0dXJuIE1hdGgubWluKG11bHRpcGxpZXIsIDIuMCk7XG59XG5cbi8qKlxuICogQnVpbGRzIGV2ZW5pbmctc3BlY2lmaWMgY29udGV4dCB0YWdzIGJhc2VkIG9uIGhvdXIgYW5kIGRheS5cbiAqIEluY2x1ZGVzIHBoYXNlcyBhbmQgZGF5LXNwZWNpZmljIHByZWZlcmVuY2VzIGxpa2UgJ3B1YicsICdjZWxlYnJhdGlvbicsIGV0Yy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlRXZlbmluZ0NvbnRleHQoaG91cjogbnVtYmVyLCBkYXk6IHN0cmluZyk6IHN0cmluZ1tdIHtcbiAgY29uc3QgYmFzZUNvbnRleHQgPSBbZGF5LCAnZXZlbmluZycsICdyZWxheGF0aW9uJywgJ2ZhbWlseScsICdjdWx0dXJhbCcsICdsZWlzdXJlJywgJ2hvbWUnLCAnc29jaWFsJ107XG5cbiAgLy8gVGltZS1vZi1ldmVuaW5nIHBoYXNlc1xuICBpZiAoaG91ciA+PSAxNyAmJiBob3VyIDwgMTkpIHtcbiAgICBiYXNlQ29udGV4dC5wdXNoKCdlYXJseV9ldmVuaW5nJywgJ3NvY2lhbCcsICdkaW5pbmcnLCAndHJhbnNpdGlvbl90aW1lJyk7XG4gIH0gZWxzZSBpZiAoaG91ciA+PSAxOSAmJiBob3VyIDwgMjEpIHtcbiAgICBiYXNlQ29udGV4dC5wdXNoKCdwcmltZV9ldmVuaW5nJywgJ2VudGVydGFpbm1lbnQnLCAnc29jaWFsX2dhdGhlcmluZycsICdwZWFrX2FjdGl2aXR5Jyk7XG4gIH0gZWxzZSBpZiAoaG91ciA+PSAyMSkge1xuICAgIGJhc2VDb250ZXh0LnB1c2goJ2xhdGVfZXZlbmluZycsICd3aW5kX2Rvd24nLCAncXVpZXRfYWN0aXZpdGllcycsICdwcmVwYXJhdGlvbicpO1xuICB9XG5cbiAgLy8gRGF5LXNwZWNpZmljIGV2ZW5pbmcgdGFnc1xuICBjb25zdCBkYXlTcGVjaWZpYzogUmVjb3JkPHN0cmluZywgc3RyaW5nW10+ID0ge1xuICAgICdGcmlkYXknOiAgICBbJ2dvaW5nX291dCcsICdzb2NpYWwnLCAnY2VsZWJyYXRpb24nLCAncHViJ10sXG4gICAgJ1NhdHVyZGF5JzogIFsnbGVpc3VyZScsICdmYW1pbHlfdGltZScsICdleHRlbmRlZF9hY3Rpdml0aWVzJ10sXG4gICAgJ1N1bmRheSc6ICAgIFsncHJlcGFyYXRpb24nLCAncmVsYXhhdGlvbicsICdlYXJseV9yZXN0J10sXG4gICAgJ01vbmRheSc6ICAgIFsncmVjb3ZlcnknLCAnbGlnaHRfYWN0aXZpdHknLCAnd2Vla19wbGFubmluZyddLFxuICAgICdUdWVzZGF5JzogICBbJ21pZF93ZWVrX3NvY2lhbCcsICdob2JieV90aW1lJ10sXG4gICAgJ1dlZG5lc2RheSc6IFsnbWlkX3dlZWtfYnJlYWsnLCAncGVyc29uYWxfdGltZSddLFxuICAgICdUaHVyc2RheSc6ICBbJ2FudGljaXBhdGlvbicsICdzb2NpYWxfcHJlcCddLFxuICB9O1xuXG4gIGlmIChkYXlTcGVjaWZpY1tkYXldKSB7XG4gICAgYmFzZUNvbnRleHQucHVzaCguLi5kYXlTcGVjaWZpY1tkYXldKTtcbiAgfVxuXG4gIHJldHVybiBiYXNlQ29udGV4dDtcbn1cbiJdLCJuYW1lcyI6WyJhcHBseUV2ZW5pbmdCb251cyIsImFjdGl2aXR5IiwiaG91ciIsImNvbnRleHRUYWdzIiwibXVsdGlwbGllciIsIndlYXRoZXJTZW5zaXRpdmUiLCJldmVuaW5nQm9udXNlcyIsImlkIiwidGFnTWF0Y2hlcyIsInRhZ3MiLCJmaWx0ZXIiLCJ0YWciLCJpbmNsdWRlcyIsImxlbmd0aCIsIk1hdGgiLCJtaW4iLCJ0b2RheSIsImdlbmVyYXRlRXZlbmluZ0NvbnRleHQiLCJkYXkiLCJiYXNlQ29udGV4dCIsInB1c2giLCJkYXlTcGVjaWZpYyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./utils/eveningScoring.ts\n"));

/***/ }),

/***/ "(pages-dir-browser)/./utils/getSuggestionsByDay.ts":
/*!**************************************!*\
  !*** ./utils/getSuggestionsByDay.ts ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSuggestionsByDay: () => (/* binding */ getSuggestionsByDay)\n/* harmony export */ });\n/* harmony import */ var _activityScoring__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./activityScoring */ \"(pages-dir-browser)/./utils/activityScoring.ts\");\n/* harmony import */ var _eveningScoring__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./eveningScoring */ \"(pages-dir-browser)/./utils/eveningScoring.ts\");\n/* harmony import */ var _heroSelector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./heroSelector */ \"(pages-dir-browser)/./utils/heroSelector.ts\");\n//----------------------------------------------\n//  src/utils/getSuggestionsByDay.ts\n//----------------------------------------------\n\n\n\n// ─── Main function ───────────────────────────\nfunction getSuggestionsByDay(param) {\n    let { forecast = [], interests = [], activities = [], now = new Date() } = param;\n    if (!Array.isArray(activities) || !Array.isArray(forecast)) return [];\n    const daysOfWeek = [\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday'\n    ];\n    const todayName = daysOfWeek[now.getDay()];\n    const currentHour = now.getHours();\n    const isTodayEvening = currentHour >= 18;\n    // Build context tags for \"today\" only\n    const todayTimeTag = isTodayEvening ? 'evening' : currentHour >= 12 ? 'afternoon' : 'morning';\n    const todayContextTags = [\n        todayName,\n        todayTimeTag,\n        'relaxation',\n        'family',\n        'cultural',\n        'leisure',\n        'home',\n        'social'\n    ];\n    return forecast.map((day, idx)=>{\n        const month = new Date(day.date).getMonth() + 1;\n        const currentDayName = daysOfWeek[new Date(day.date).getDay()];\n        // Only include activities in season\n        let inSeasonActivities = activities.filter((activity)=>{\n            if (!activity.seasonalMonths || activity.seasonalMonths.length === 0) return true;\n            return activity.seasonalMonths.includes(month);\n        });\n        // Determine if this is today\n        const isToday = new Date(day.date).toDateString() === now.toDateString();\n        const isEvening = isToday && now.getHours() >= 18;\n        // After 6pm, only show indoor or 'evening'-tagged activities\n        if (isEvening) {\n            inSeasonActivities = inSeasonActivities.filter((activity)=>!activity.weatherSensitive || activity.tags && activity.tags.includes('evening'));\n        }\n        // Determine if weather is \"good\" for any outdoor activity\n        const outdoorScores = activities.filter((a)=>a.weatherSensitive).map((a)=>(0,_activityScoring__WEBPACK_IMPORTED_MODULE_0__.calculateActivityScore)(a, day.weather, false, false));\n        const isWeatherGood = outdoorScores.some((score)=>score >= 60);\n        const suggestions = inSeasonActivities.map((activity)=>{\n            let score = (0,_activityScoring__WEBPACK_IMPORTED_MODULE_0__.calculateActivityScore)(activity, day.weather, isWeatherGood, isEvening);\n            // Boost if the activity's tags include the current day\n            if (activity.tags && activity.tags.includes(currentDayName)) {\n                score = Math.round(score * 1.1);\n            }\n            if (isEvening) {\n                score = Math.round(score * (0,_eveningScoring__WEBPACK_IMPORTED_MODULE_1__.applyEveningBonus)(activity, now.getHours(), todayContextTags));\n            }\n            return {\n                activityId: activity.id,\n                score,\n                evaluation: activity.weatherSensitive ? score >= 80 ? 'perfect' : score >= 60 ? 'good' : score >= 30 ? 'acceptable' : 'acceptable' : activity.indoorAlternative ? 'indoorAlternative' : 'indoor',\n                weatherSensitive: activity.weatherSensitive\n            };\n        });\n        // Always show top 10 by score, regardless of type\n        const top10 = suggestions.sort((a, b)=>b.score - a.score).slice(0, 10);\n        return {\n            date: day.date,\n            suggestions: top10.map((param)=>{\n                let { weatherSensitive, ...rest } = param;\n                return rest;\n            }),\n            heroActivity: (0,_heroSelector__WEBPACK_IMPORTED_MODULE_2__.selectHeroActivity)(top10, isEvening)\n        };\n    }); // <-- This closes the forecast.map\n} // <-- This closes the getSuggestionsByDay function\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./utils/getSuggestionsByDay.ts\n"));

/***/ })

});