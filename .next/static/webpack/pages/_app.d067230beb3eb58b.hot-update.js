"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "(pages-dir-browser)/./context/UserPreferencesContext.tsx":
/*!********************************************!*\
  !*** ./context/UserPreferencesContext.tsx ***!
  \********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UserPreferencesContext: () => (/* binding */ UserPreferencesContext),\n/* harmony export */   UserPreferencesProvider: () => (/* binding */ UserPreferencesProvider),\n/* harmony export */   useUserPreferences: () => (/* binding */ useUserPreferences)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _data_activityTypes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/activityTypes */ \"(pages-dir-browser)/./data/activityTypes.ts\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n// --- Constants ---\nconst waterActivityIds = [\n    'kayaking',\n    'canoeing',\n    'surfing',\n    'stand_up_paddleboarding',\n    'snorkeling',\n    'swimming',\n    'sea_fishing_shore',\n    'sea_fishing_boat'\n];\nconst DEFAULT_HOME_LOCATION = {\n    name: \"Colunga, Asturias\",\n    lat: 43.4667,\n    lon: -5.45,\n    type: 'home'\n};\nconst DEFAULT_COASTAL_LOCATION = {\n    name: \"Playa de La Griega\",\n    lat: 43.4898,\n    lon: -5.2716,\n    type: 'coastal'\n};\nconst defaultEventPreferences = {\n    sport: false,\n    music: false,\n    arts: false,\n    musicCategories: [],\n    artsCategories: [],\n    sportsCategories: []\n};\nconst defaultPreferences = {\n    locations: [\n        DEFAULT_HOME_LOCATION\n    ],\n    interests: [],\n    forecast: [],\n    category: 'Music',\n    genre: '',\n    eventPreferences: defaultEventPreferences\n};\nconst UserPreferencesContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst UserPreferencesProvider = (param)=>{\n    let { children } = param;\n    _s();\n    const [preferences, setPreferences] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        \"UserPreferencesProvider.useState\": ()=>{\n            if (false) {}\n            const stored = localStorage.getItem('preferences');\n            if (!stored) return defaultPreferences;\n            try {\n                const parsed = JSON.parse(stored);\n                // --- Interests validation\n                const validIds = new Set(_data_activityTypes__WEBPACK_IMPORTED_MODULE_2__.activityTypes.map({\n                    \"UserPreferencesProvider.useState\": (a)=>a.id\n                }[\"UserPreferencesProvider.useState\"]));\n                parsed.interests = Array.isArray(parsed.interests) ? parsed.interests.filter({\n                    \"UserPreferencesProvider.useState\": (id)=>validIds.has(id)\n                }[\"UserPreferencesProvider.useState\"]) : [];\n                // --- Event Preferences validation\n                if (!parsed.eventPreferences || typeof parsed.eventPreferences !== 'object') {\n                    parsed.eventPreferences = {\n                        ...defaultEventPreferences\n                    };\n                } else {\n                    const ep = parsed.eventPreferences;\n                    parsed.eventPreferences = {\n                        sport: !!ep.sport,\n                        music: !!ep.music,\n                        arts: !!ep.arts,\n                        musicCategories: Array.isArray(ep.musicCategories) ? ep.musicCategories : [],\n                        artsCategories: Array.isArray(ep.artsCategories) ? ep.artsCategories : [],\n                        sportsCategories: Array.isArray(ep.sportsCategories) ? ep.sportsCategories : []\n                    };\n                }\n                // --- Locations validation\n                parsed.locations = Array.isArray(parsed.locations) && parsed.locations.length > 0 ? parsed.locations : [\n                    DEFAULT_HOME_LOCATION\n                ];\n                return parsed;\n            } catch (e) {\n                console.warn('Failed to parse preferences from localStorage, using defaults.', e);\n                return defaultPreferences;\n            }\n        }\n    }[\"UserPreferencesProvider.useState\"]);\n    // --- Auto-detect home location if not set ---\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"UserPreferencesProvider.useEffect\": ()=>{\n            const hasHome = preferences.locations.some({\n                \"UserPreferencesProvider.useEffect.hasHome\": (l)=>l.type === 'home'\n            }[\"UserPreferencesProvider.useEffect.hasHome\"]);\n            if (!hasHome && \"object\" !== \"undefined\" && navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition({\n                    \"UserPreferencesProvider.useEffect\": (position)=>{\n                        setPreferences({\n                            \"UserPreferencesProvider.useEffect\": (prev)=>({\n                                    ...prev,\n                                    locations: [\n                                        ...prev.locations.filter({\n                                            \"UserPreferencesProvider.useEffect\": (l)=>l.type !== 'home'\n                                        }[\"UserPreferencesProvider.useEffect\"]),\n                                        {\n                                            name: 'Current Location',\n                                            lat: position.coords.latitude,\n                                            lon: position.coords.longitude,\n                                            type: 'home'\n                                        }\n                                    ]\n                                })\n                        }[\"UserPreferencesProvider.useEffect\"]);\n                    }\n                }[\"UserPreferencesProvider.useEffect\"], {\n                    \"UserPreferencesProvider.useEffect\": ()=>{\n                        // fallback, set to default home location\n                        setPreferences({\n                            \"UserPreferencesProvider.useEffect\": (prev)=>({\n                                    ...prev,\n                                    locations: [\n                                        ...prev.locations.filter({\n                                            \"UserPreferencesProvider.useEffect\": (l)=>l.type !== 'home'\n                                        }[\"UserPreferencesProvider.useEffect\"]),\n                                        DEFAULT_HOME_LOCATION\n                                    ]\n                                })\n                        }[\"UserPreferencesProvider.useEffect\"]);\n                    }\n                }[\"UserPreferencesProvider.useEffect\"]);\n            }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        }\n    }[\"UserPreferencesProvider.useEffect\"], []);\n    // --- Watch for water activities, auto-add coastal location if needed ---\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"UserPreferencesProvider.useEffect\": ()=>{\n            const wantsCoastal = preferences.interests.some({\n                \"UserPreferencesProvider.useEffect.wantsCoastal\": (id)=>waterActivityIds.includes(id)\n            }[\"UserPreferencesProvider.useEffect.wantsCoastal\"]);\n            const hasCoastal = preferences.locations.some({\n                \"UserPreferencesProvider.useEffect.hasCoastal\": (l)=>l.type === 'coastal'\n            }[\"UserPreferencesProvider.useEffect.hasCoastal\"]);\n            if (wantsCoastal && !hasCoastal) {\n                setPreferences({\n                    \"UserPreferencesProvider.useEffect\": (prev)=>({\n                            ...prev,\n                            locations: [\n                                ...prev.locations,\n                                DEFAULT_COASTAL_LOCATION\n                            ]\n                        })\n                }[\"UserPreferencesProvider.useEffect\"]);\n            }\n        // Optional: You might want to remove the coastal location if no more water activities\n        // else if (!wantsCoastal && hasCoastal) {\n        //   setPreferences(prev => ({\n        //     ...prev,\n        //     locations: prev.locations.filter(l => l.type !== 'coastal')\n        //   }));\n        // }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        }\n    }[\"UserPreferencesProvider.useEffect\"], [\n        preferences.interests\n    ]);\n    // --- Persist preferences to localStorage ---\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"UserPreferencesProvider.useEffect\": ()=>{\n            if (true) {\n                localStorage.setItem('preferences', JSON.stringify(preferences));\n            }\n        }\n    }[\"UserPreferencesProvider.useEffect\"], [\n        preferences\n    ]);\n    // --- Weather forecast fetcher (fetches for home location) ---\n    const fetchForecast = async ()=>{\n        const home = preferences.locations.find((l)=>l.type === 'home');\n        if (!(home === null || home === void 0 ? void 0 : home.lat) || !home.lon) return;\n        const apiKey = /* unsupported import.meta.env.VITE_OPENWEATHER_KEY */ undefined.VITE_OPENWEATHER_KEY;\n        if (!apiKey) {\n            console.warn('OpenWeather API key is missing');\n            return;\n        }\n        const url = \"https://api.openweathermap.org/data/2.5/forecast?lat=\".concat(home.lat, \"&lon=\").concat(home.lon, \"&appid=\").concat(apiKey, \"&units=metric\");\n        try {\n            const res = await fetch(url);\n            if (!res.ok) {\n                console.warn('Failed to fetch forecast:', res.statusText);\n                return;\n            }\n            const data = await res.json();\n            // Structure forecast by day/slot (morning, afternoon, night)\n            const byDay = [];\n            for(let i = 0; i < 5; i++){\n                const date = new Date();\n                date.setDate(date.getDate() + i);\n                const dayStr = date.toISOString().split('T')[0];\n                const daySlots = data.list.filter((entry)=>entry.dt_txt.startsWith(dayStr));\n                const slots = {\n                    date: dayStr,\n                    morning: daySlots.find((e)=>{\n                        const hour = parseInt(e.dt_txt.slice(11, 13));\n                        return hour >= 6 && hour < 12;\n                    }),\n                    afternoon: daySlots.find((e)=>{\n                        const hour = parseInt(e.dt_txt.slice(11, 13));\n                        return hour >= 12 && hour < 18;\n                    }),\n                    night: daySlots.find((e)=>{\n                        const hour = parseInt(e.dt_txt.slice(11, 13));\n                        return hour >= 18 || hour < 6;\n                    })\n                };\n                byDay.push(slots);\n            }\n            setPreferences((prev)=>({\n                    ...prev,\n                    forecast: byDay\n                }));\n        } catch (error) {\n            console.warn('Error fetching forecast:', error);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(UserPreferencesContext.Provider, {\n        value: {\n            preferences,\n            setPreferences,\n            fetchForecast\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/damianrafferty/Projects/WotNow/context/UserPreferencesContext.tsx\",\n        lineNumber: 238,\n        columnNumber: 5\n    }, undefined);\n};\n_s(UserPreferencesProvider, \"6eAY+I1u59JoemZ75I4Cy1DpSJU=\");\n_c = UserPreferencesProvider;\nconst useUserPreferences = ()=>{\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(UserPreferencesContext);\n    if (!context) throw new Error('useUserPreferences must be used within a UserPreferencesProvider');\n    return context;\n};\n_s1(useUserPreferences, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n$RefreshReg$(_c, \"UserPreferencesProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./context/UserPreferencesContext.tsx\n"));

/***/ })

});