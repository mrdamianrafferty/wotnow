"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./utils/getSuggestionsByDay.ts":
/*!**************************************!*\
  !*** ./utils/getSuggestionsByDay.ts ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSuggestionsByDay: () => (/* binding */ getSuggestionsByDay)\n/* harmony export */ });\n/* harmony import */ var _activityScoring__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./activityScoring */ \"(pages-dir-browser)/./utils/activityScoring.ts\");\n/* harmony import */ var _heroSelector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./heroSelector */ \"(pages-dir-browser)/./utils/heroSelector.ts\");\n//----------------------------------------------\n//  src/utils/getSuggestionsByDay.ts\n//----------------------------------------------\n\n\n// ─── Main function ───────────────────────────\nfunction getSuggestionsByDay(param) {\n    let { forecast = [], interests = [], activities = [], now = new Date() } = param;\n    if (!Array.isArray(activities) || !Array.isArray(forecast)) return [];\n    const daysOfWeek = [\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday'\n    ];\n    const todayName = daysOfWeek[now.getDay()];\n    const currentHour = now.getHours();\n    const isTodayEvening = currentHour >= 18;\n    // Build context tags for \"today\" only\n    const todayTimeTag = isTodayEvening ? 'evening' : currentHour >= 12 ? 'afternoon' : 'morning';\n    const todayContextTags = [\n        todayName,\n        todayTimeTag,\n        'relaxation',\n        'family',\n        'cultural',\n        'leisure',\n        'home',\n        'social'\n    ];\n    return forecast.map((day, idx)=>{\n        const month = new Date(day.date).getMonth() + 1; // JS months are 0-based\n        // Only include activities in season\n        const inSeasonActivities = activities.filter((activity)=>{\n            if (!activity.seasonalMonths || activity.seasonalMonths.length === 0) return true;\n            return activity.seasonalMonths.includes(month);\n        });\n        // Score all activities\n        const suggestions = inSeasonActivities.map((activity)=>({\n                activityId: activity.id,\n                score: (0,_activityScoring__WEBPACK_IMPORTED_MODULE_0__.calculateActivityScore)(activity, day.weather, isWeatherGood, isEvening),\n                evaluation: activity.weatherSensitive ? (0,_activityScoring__WEBPACK_IMPORTED_MODULE_0__.calculateActivityScore)(activity, day.weather, isWeatherGood, isEvening) >= 80 ? 'perfect' : (0,_activityScoring__WEBPACK_IMPORTED_MODULE_0__.calculateActivityScore)(activity, day.weather, isWeatherGood, isEvening) >= 60 ? 'good' : (0,_activityScoring__WEBPACK_IMPORTED_MODULE_0__.calculateActivityScore)(activity, day.weather, isWeatherGood, isEvening) >= 30 ? 'acceptable' : 'acceptable' : activity.indoorAlternative ? 'indoorAlternative' : 'indoor',\n                weatherSensitive: activity.weatherSensitive\n            }));\n        // Determine if this is today\n        const isToday = new Date(day.date).toDateString() === now.toDateString();\n        const isEvening = isToday && now.getHours() >= 18;\n        // Determine if weather is \"good\" for any outdoor activity\n        const outdoorScores = activities.filter((a)=>a.weatherSensitive).map((a)=>(0,_activityScoring__WEBPACK_IMPORTED_MODULE_0__.calculateActivityScore)(a, day.weather, false, false));\n        const isWeatherGood = outdoorScores.some((score)=>score >= 60);\n        // 1. Perfect outdoor activities\n        const perfectOutdoor = suggestions.filter((s)=>s.weatherSensitive && s.evaluation === 'perfect').sort((a, b)=>b.score - a.score);\n        if (perfectOutdoor.length >= 10) {\n            const top10 = perfectOutdoor.slice(0, 10);\n            return {\n                date: day.date,\n                suggestions: top10.map((param)=>{\n                    let { weatherSensitive, ...rest } = param;\n                    return rest;\n                }),\n                heroActivity: (0,_heroSelector__WEBPACK_IMPORTED_MODULE_1__.selectHeroActivity)(top10, isEvening)\n            };\n        }\n        // 2. Good outdoor activities\n        const goodOutdoor = suggestions.filter((s)=>s.weatherSensitive && s.evaluation === 'good').sort((a, b)=>b.score - a.score);\n        // 3. Acceptable outdoor activities\n        const acceptableOutdoor = suggestions.filter((s)=>s.weatherSensitive && s.evaluation === 'acceptable').sort((a, b)=>b.score - a.score);\n        // 4. Indoor activities\n        const indoor = suggestions.filter((s)=>!s.weatherSensitive).sort((a, b)=>b.score - a.score);\n        // Fill up to 10 in order: perfect, good, acceptable, indoor\n        const combined = [];\n        combined.push(...perfectOutdoor);\n        if (combined.length < 10) {\n            combined.push(...goodOutdoor.slice(0, 10 - combined.length));\n        }\n        if (combined.length < 10) {\n            combined.push(...acceptableOutdoor.slice(0, 10 - combined.length));\n        }\n        if (combined.length < 10) {\n            combined.push(...indoor.slice(0, 10 - combined.length));\n        }\n        const top10 = combined.slice(0, 10);\n        return {\n            date: day.date,\n            suggestions: top10.map((param)=>{\n                let { weatherSensitive, ...rest } = param;\n                return rest;\n            }),\n            heroActivity: (0,_heroSelector__WEBPACK_IMPORTED_MODULE_1__.selectHeroActivity)(top10, isEvening)\n        };\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3V0aWxzL2dldFN1Z2dlc3Rpb25zQnlEYXkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsZ0RBQWdEO0FBQ2hELG9DQUFvQztBQUNwQyxnREFBZ0Q7QUFFVztBQUVQO0FBb0RwRCxnREFBZ0Q7QUFDekMsU0FBU0Usb0JBQW9CLEtBS1I7UUFMUSxFQUNsQ0MsV0FBVyxFQUFFLEVBQ2JDLFlBQVksRUFBRSxFQUNkQyxhQUFhLEVBQUUsRUFDZkMsTUFBTSxJQUFJQyxNQUFNLEVBQ1UsR0FMUTtJQU1sQyxJQUFJLENBQUNDLE1BQU1DLE9BQU8sQ0FBQ0osZUFBZSxDQUFDRyxNQUFNQyxPQUFPLENBQUNOLFdBQVcsT0FBTyxFQUFFO0lBRXJFLE1BQU1PLGFBQWE7UUFBQztRQUFTO1FBQVM7UUFBVTtRQUFZO1FBQVc7UUFBUztLQUFXO0lBQzNGLE1BQU1DLFlBQWFELFVBQVUsQ0FBQ0osSUFBSU0sTUFBTSxHQUFHO0lBQzNDLE1BQU1DLGNBQWNQLElBQUlRLFFBQVE7SUFDaEMsTUFBTUMsaUJBQWlCRixlQUFlO0lBRXRDLHNDQUFzQztJQUN0QyxNQUFNRyxlQUFlRCxpQkFDakIsWUFDQ0YsZUFBZSxLQUFLLGNBQWM7SUFDdkMsTUFBTUksbUJBQW1CO1FBQ3ZCTjtRQUNBSztRQUNBO1FBQWE7UUFBUztRQUFXO1FBQVU7UUFBTztLQUNuRDtJQUVELE9BQU9iLFNBQVNlLEdBQUcsQ0FBQyxDQUFDQyxLQUFLQztRQUV4QixNQUFNQyxRQUFRLElBQUlkLEtBQUtZLElBQUlHLElBQUksRUFBRUMsUUFBUSxLQUFLLEdBQUcsd0JBQXdCO1FBRTNFLG9DQUFvQztRQUNwQyxNQUFNQyxxQkFBcUJuQixXQUFXb0IsTUFBTSxDQUFDQyxDQUFBQTtZQUMzQyxJQUFJLENBQUNBLFNBQVNDLGNBQWMsSUFBSUQsU0FBU0MsY0FBYyxDQUFDQyxNQUFNLEtBQUssR0FBRyxPQUFPO1lBQzdFLE9BQU9GLFNBQVNDLGNBQWMsQ0FBQ0UsUUFBUSxDQUFDUjtRQUMxQztRQUVBLHVCQUF1QjtRQUN2QixNQUFNUyxjQUFjTixtQkFBbUJOLEdBQUcsQ0FBQ1EsQ0FBQUEsV0FBYTtnQkFDdERLLFlBQVlMLFNBQVNNLEVBQUU7Z0JBQ3ZCQyxPQUFPakMsd0VBQXNCQSxDQUMzQjBCLFVBQ0FQLElBQUllLE9BQU8sRUFDWEMsZUFDQUM7Z0JBRUZDLFlBQVlYLFNBQVNZLGdCQUFnQixHQUUvQnRDLHdFQUFzQkEsQ0FBQzBCLFVBQVVQLElBQUllLE9BQU8sRUFBRUMsZUFBZUMsY0FBYyxLQUFLLFlBQ2hGcEMsd0VBQXNCQSxDQUFDMEIsVUFBVVAsSUFBSWUsT0FBTyxFQUFFQyxlQUFlQyxjQUFjLEtBQUssU0FDaEZwQyx3RUFBc0JBLENBQUMwQixVQUFVUCxJQUFJZSxPQUFPLEVBQUVDLGVBQWVDLGNBQWMsS0FBSyxlQUNoRixlQUVEVixTQUFTYSxpQkFBaUIsR0FBRyxzQkFBc0I7Z0JBQ3hERCxrQkFBa0JaLFNBQVNZLGdCQUFnQjtZQUU3QztRQUVFLDZCQUE2QjtRQUM3QixNQUFNRSxVQUNKLElBQUlqQyxLQUFLWSxJQUFJRyxJQUFJLEVBQUVtQixZQUFZLE9BQU9uQyxJQUFJbUMsWUFBWTtRQUN4RCxNQUFNTCxZQUFZSSxXQUFXbEMsSUFBSVEsUUFBUSxNQUFNO1FBRS9DLDBEQUEwRDtRQUMxRCxNQUFNNEIsZ0JBQWdCckMsV0FDbkJvQixNQUFNLENBQUNrQixDQUFBQSxJQUFLQSxFQUFFTCxnQkFBZ0IsRUFDOUJwQixHQUFHLENBQUN5QixDQUFBQSxJQUFLM0Msd0VBQXNCQSxDQUFDMkMsR0FBR3hCLElBQUllLE9BQU8sRUFBRSxPQUFPO1FBQzFELE1BQU1DLGdCQUFnQk8sY0FBY0UsSUFBSSxDQUFDWCxDQUFBQSxRQUFTQSxTQUFTO1FBSTNELGdDQUFnQztRQUNoQyxNQUFNWSxpQkFBaUJmLFlBQ3BCTCxNQUFNLENBQUNxQixDQUFBQSxJQUFLQSxFQUFFUixnQkFBZ0IsSUFBSVEsRUFBRVQsVUFBVSxLQUFLLFdBQ25EVSxJQUFJLENBQUMsQ0FBQ0osR0FBR0ssSUFBTUEsRUFBRWYsS0FBSyxHQUFHVSxFQUFFVixLQUFLO1FBRW5DLElBQUlZLGVBQWVqQixNQUFNLElBQUksSUFBSTtZQUMvQixNQUFNcUIsUUFBUUosZUFBZUssS0FBSyxDQUFDLEdBQUc7WUFDdEMsT0FBTztnQkFDTDVCLE1BQU1ILElBQUlHLElBQUk7Z0JBQ2RRLGFBQWFtQixNQUFNL0IsR0FBRyxDQUFDO3dCQUFDLEVBQUVvQixnQkFBZ0IsRUFBRSxHQUFHYSxNQUFNOzJCQUFLQTs7Z0JBQzFEQyxjQUFjbkQsaUVBQWtCQSxDQUFDZ0QsT0FBT2I7WUFDMUM7UUFDRjtRQUVBLDZCQUE2QjtRQUM3QixNQUFNaUIsY0FBY3ZCLFlBQ2pCTCxNQUFNLENBQUNxQixDQUFBQSxJQUFLQSxFQUFFUixnQkFBZ0IsSUFBSVEsRUFBRVQsVUFBVSxLQUFLLFFBQ25EVSxJQUFJLENBQUMsQ0FBQ0osR0FBR0ssSUFBTUEsRUFBRWYsS0FBSyxHQUFHVSxFQUFFVixLQUFLO1FBRW5DLG1DQUFtQztRQUNuQyxNQUFNcUIsb0JBQW9CeEIsWUFDdkJMLE1BQU0sQ0FBQ3FCLENBQUFBLElBQUtBLEVBQUVSLGdCQUFnQixJQUFJUSxFQUFFVCxVQUFVLEtBQUssY0FDbkRVLElBQUksQ0FBQyxDQUFDSixHQUFHSyxJQUFNQSxFQUFFZixLQUFLLEdBQUdVLEVBQUVWLEtBQUs7UUFFbkMsdUJBQXVCO1FBQ3ZCLE1BQU1zQixTQUFTekIsWUFDWkwsTUFBTSxDQUFDcUIsQ0FBQUEsSUFBSyxDQUFDQSxFQUFFUixnQkFBZ0IsRUFDL0JTLElBQUksQ0FBQyxDQUFDSixHQUFHSyxJQUFNQSxFQUFFZixLQUFLLEdBQUdVLEVBQUVWLEtBQUs7UUFFbkMsNERBQTREO1FBQzVELE1BQU11QixXQUErQixFQUFFO1FBQ3ZDQSxTQUFTQyxJQUFJLElBQUlaO1FBQ2pCLElBQUlXLFNBQVM1QixNQUFNLEdBQUcsSUFBSTtZQUN4QjRCLFNBQVNDLElBQUksSUFBSUosWUFBWUgsS0FBSyxDQUFDLEdBQUcsS0FBS00sU0FBUzVCLE1BQU07UUFDNUQ7UUFDQSxJQUFJNEIsU0FBUzVCLE1BQU0sR0FBRyxJQUFJO1lBQ3hCNEIsU0FBU0MsSUFBSSxJQUFJSCxrQkFBa0JKLEtBQUssQ0FBQyxHQUFHLEtBQUtNLFNBQVM1QixNQUFNO1FBQ2xFO1FBQ0EsSUFBSTRCLFNBQVM1QixNQUFNLEdBQUcsSUFBSTtZQUN4QjRCLFNBQVNDLElBQUksSUFBSUYsT0FBT0wsS0FBSyxDQUFDLEdBQUcsS0FBS00sU0FBUzVCLE1BQU07UUFDdkQ7UUFDQSxNQUFNcUIsUUFBUU8sU0FBU04sS0FBSyxDQUFDLEdBQUc7UUFFaEMsT0FBTztZQUNMNUIsTUFBTUgsSUFBSUcsSUFBSTtZQUNkUSxhQUFhbUIsTUFBTS9CLEdBQUcsQ0FBQztvQkFBQyxFQUFFb0IsZ0JBQWdCLEVBQUUsR0FBR2EsTUFBTTt1QkFBS0E7O1lBQzFEQyxjQUFjbkQsaUVBQWtCQSxDQUFDZ0QsT0FBT2I7UUFDMUM7SUFDRjtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMvZGFtaWFucmFmZmVydHkvUHJvamVjdHMvV290Tm93L3V0aWxzL2dldFN1Z2dlc3Rpb25zQnlEYXkudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgc3JjL3V0aWxzL2dldFN1Z2dlc3Rpb25zQnlEYXkudHNcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuaW1wb3J0IHsgZ2V0QWN0aXZpdHlTdWl0YWJpbGl0eSB9IGZyb20gJy4vYWN0aXZpdHlTdWl0YWJpbGl0eSc7XG5pbXBvcnQgeyBjYWxjdWxhdGVBY3Rpdml0eVNjb3JlIH0gZnJvbSAnLi9hY3Rpdml0eVNjb3JpbmcnO1xuaW1wb3J0IHsgYXBwbHlFdmVuaW5nQm9udXMgfSBmcm9tICcuL2V2ZW5pbmdTY29yaW5nJztcbmltcG9ydCB7IHNlbGVjdEhlcm9BY3Rpdml0eSB9IGZyb20gJy4vaGVyb1NlbGVjdG9yJztcbmltcG9ydCB7IG1hdGNoU2NvcmUgfSBmcm9tICcuL21hdGNoU2NvcmUnO1xuaW1wb3J0IHsgYXBwbHlXZWVrZGF5Qm9vc3QgfSBmcm9tICcuL3dlZWtkYXlTY29yaW5nJztcbmltcG9ydCB7IEFjdGl2aXR5VHlwZSB9IGZyb20gJy4uL2RhdGEvYWN0aXZpdHlUeXBlcyc7XG5cbi8vIOKUgOKUgOKUgCBUeXBlcyDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIBcbmV4cG9ydCB0eXBlIFN1aXRhYmlsaXR5TGV2ZWwgPVxuICB8ICdwZXJmZWN0J1xuICB8ICdnb29kJ1xuICB8ICdhY2NlcHRhYmxlJ1xuICB8ICdpbmRvb3InXG4gIHwgJ2luZG9vckFsdGVybmF0aXZlJztcblxuZXhwb3J0IGludGVyZmFjZSBXZWF0aGVyRGF0YSB7XG4gIHRlbXBlcmF0dXJlPzogbnVtYmVyO1xuICBwcmVjaXBpdGF0aW9uPzogbnVtYmVyO1xuICB3aW5kU3BlZWQ/OiBudW1iZXI7XG4gIHdhdGVyVGVtcGVyYXR1cmU/OiBudW1iZXI7XG4gIHdhdmVIZWlnaHQ/OiBudW1iZXI7XG4gIHN3ZWxsSGVpZ2h0PzogbnVtYmVyO1xuICBzd2VsbFBlcmlvZD86IG51bWJlcjtcbiAgY2xvdWRzPzogbnVtYmVyO1xuICBodW1pZGl0eT86IG51bWJlcjtcbiAgdmlzaWJpbGl0eT86IG51bWJlcjtcbiAgW2tleTogc3RyaW5nXTogbnVtYmVyIHwgdW5kZWZpbmVkIHwgbnVsbDtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBGb3JlY2FzdERheUlucHV0IHtcbiAgZGF0ZTogc3RyaW5nO1xuICB3ZWF0aGVyOiBXZWF0aGVyRGF0YTtcbiAgbWFyaW5lPzogUmVjb3JkPHN0cmluZywgbnVtYmVyPltdO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFN1Z2dlc3Rpb24ge1xuICBhY3Rpdml0eUlkOiBzdHJpbmc7XG4gIGV2YWx1YXRpb246IFN1aXRhYmlsaXR5TGV2ZWw7XG4gIHNjb3JlOiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3VnZ2VzdGlvbnNGb3JEYXkge1xuICBkYXRlOiBzdHJpbmc7XG4gIHN1Z2dlc3Rpb25zOiBTdWdnZXN0aW9uW107XG4gIGhlcm9BY3Rpdml0eTogU3VnZ2VzdGlvbiB8IG51bGw7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgR2V0U3VnZ2VzdGlvbnNCeURheVBhcmFtcyB7XG4gIGZvcmVjYXN0OiBGb3JlY2FzdERheUlucHV0W107XG4gIGludGVyZXN0czogc3RyaW5nW107XG4gIGFjdGl2aXRpZXM6IEFjdGl2aXR5VHlwZVtdO1xuICBub3c/OiBEYXRlOyAgLy8gT3B0aW9uYWw6IG92ZXJyaWRlIGZvciB0ZXN0cyBvciBTU1Jcbn1cblxuLy8g4pSA4pSA4pSAIE1haW4gZnVuY3Rpb24g4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAXG5leHBvcnQgZnVuY3Rpb24gZ2V0U3VnZ2VzdGlvbnNCeURheSh7XG4gIGZvcmVjYXN0ID0gW10sXG4gIGludGVyZXN0cyA9IFtdLFxuICBhY3Rpdml0aWVzID0gW10sXG4gIG5vdyA9IG5ldyBEYXRlKClcbn06IEdldFN1Z2dlc3Rpb25zQnlEYXlQYXJhbXMpOiBTdWdnZXN0aW9uc0ZvckRheVtdIHtcbiAgaWYgKCFBcnJheS5pc0FycmF5KGFjdGl2aXRpZXMpIHx8ICFBcnJheS5pc0FycmF5KGZvcmVjYXN0KSkgcmV0dXJuIFtdO1xuXG4gIGNvbnN0IGRheXNPZldlZWsgPSBbJ1N1bmRheScsJ01vbmRheScsJ1R1ZXNkYXknLCdXZWRuZXNkYXknLCdUaHVyc2RheScsJ0ZyaWRheScsJ1NhdHVyZGF5J107XG4gIGNvbnN0IHRvZGF5TmFtZSAgPSBkYXlzT2ZXZWVrW25vdy5nZXREYXkoKV07XG4gIGNvbnN0IGN1cnJlbnRIb3VyID0gbm93LmdldEhvdXJzKCk7XG4gIGNvbnN0IGlzVG9kYXlFdmVuaW5nID0gY3VycmVudEhvdXIgPj0gMTg7XG5cbiAgLy8gQnVpbGQgY29udGV4dCB0YWdzIGZvciBcInRvZGF5XCIgb25seVxuICBjb25zdCB0b2RheVRpbWVUYWcgPSBpc1RvZGF5RXZlbmluZ1xuICAgID8gJ2V2ZW5pbmcnXG4gICAgOiAoY3VycmVudEhvdXIgPj0gMTIgPyAnYWZ0ZXJub29uJyA6ICdtb3JuaW5nJyk7XG4gIGNvbnN0IHRvZGF5Q29udGV4dFRhZ3MgPSBbXG4gICAgdG9kYXlOYW1lLFxuICAgIHRvZGF5VGltZVRhZyxcbiAgICAncmVsYXhhdGlvbicsJ2ZhbWlseScsJ2N1bHR1cmFsJywnbGVpc3VyZScsJ2hvbWUnLCdzb2NpYWwnXG4gIF07XG5cbiAgcmV0dXJuIGZvcmVjYXN0Lm1hcCgoZGF5LCBpZHgpID0+IHtcblxuICAgIGNvbnN0IG1vbnRoID0gbmV3IERhdGUoZGF5LmRhdGUpLmdldE1vbnRoKCkgKyAxOyAvLyBKUyBtb250aHMgYXJlIDAtYmFzZWRcblxuICAvLyBPbmx5IGluY2x1ZGUgYWN0aXZpdGllcyBpbiBzZWFzb25cbiAgY29uc3QgaW5TZWFzb25BY3Rpdml0aWVzID0gYWN0aXZpdGllcy5maWx0ZXIoYWN0aXZpdHkgPT4ge1xuICAgIGlmICghYWN0aXZpdHkuc2Vhc29uYWxNb250aHMgfHwgYWN0aXZpdHkuc2Vhc29uYWxNb250aHMubGVuZ3RoID09PSAwKSByZXR1cm4gdHJ1ZTtcbiAgICByZXR1cm4gYWN0aXZpdHkuc2Vhc29uYWxNb250aHMuaW5jbHVkZXMobW9udGgpO1xuICB9KTtcblxuICAvLyBTY29yZSBhbGwgYWN0aXZpdGllc1xuICBjb25zdCBzdWdnZXN0aW9ucyA9IGluU2Vhc29uQWN0aXZpdGllcy5tYXAoYWN0aXZpdHkgPT4gKHtcbiAgICBhY3Rpdml0eUlkOiBhY3Rpdml0eS5pZCxcbiAgICBzY29yZTogY2FsY3VsYXRlQWN0aXZpdHlTY29yZShcbiAgICAgIGFjdGl2aXR5LFxuICAgICAgZGF5LndlYXRoZXIsXG4gICAgICBpc1dlYXRoZXJHb29kLFxuICAgICAgaXNFdmVuaW5nXG4gICAgKSxcbiAgICBldmFsdWF0aW9uOiBhY3Rpdml0eS53ZWF0aGVyU2Vuc2l0aXZlXG4gICAgICA/IChcbiAgICAgICAgICBjYWxjdWxhdGVBY3Rpdml0eVNjb3JlKGFjdGl2aXR5LCBkYXkud2VhdGhlciwgaXNXZWF0aGVyR29vZCwgaXNFdmVuaW5nKSA+PSA4MCA/ICdwZXJmZWN0J1xuICAgICAgICA6IGNhbGN1bGF0ZUFjdGl2aXR5U2NvcmUoYWN0aXZpdHksIGRheS53ZWF0aGVyLCBpc1dlYXRoZXJHb29kLCBpc0V2ZW5pbmcpID49IDYwID8gJ2dvb2QnXG4gICAgICAgIDogY2FsY3VsYXRlQWN0aXZpdHlTY29yZShhY3Rpdml0eSwgZGF5LndlYXRoZXIsIGlzV2VhdGhlckdvb2QsIGlzRXZlbmluZykgPj0gMzAgPyAnYWNjZXB0YWJsZSdcbiAgICAgICAgOiAnYWNjZXB0YWJsZSdcbiAgICAgIClcbiAgICAgIDogKGFjdGl2aXR5LmluZG9vckFsdGVybmF0aXZlID8gJ2luZG9vckFsdGVybmF0aXZlJyA6ICdpbmRvb3InKSxcbiAgICB3ZWF0aGVyU2Vuc2l0aXZlOiBhY3Rpdml0eS53ZWF0aGVyU2Vuc2l0aXZlLFxuICAgIC8vIC4uLm90aGVyIHN1Z2dlc3Rpb24gZmllbGRzLi4uXG4gIH0pKTtcblxuICAgIC8vIERldGVybWluZSBpZiB0aGlzIGlzIHRvZGF5XG4gICAgY29uc3QgaXNUb2RheSA9XG4gICAgICBuZXcgRGF0ZShkYXkuZGF0ZSkudG9EYXRlU3RyaW5nKCkgPT09IG5vdy50b0RhdGVTdHJpbmcoKTtcbiAgICBjb25zdCBpc0V2ZW5pbmcgPSBpc1RvZGF5ICYmIG5vdy5nZXRIb3VycygpID49IDE4O1xuXG4gICAgLy8gRGV0ZXJtaW5lIGlmIHdlYXRoZXIgaXMgXCJnb29kXCIgZm9yIGFueSBvdXRkb29yIGFjdGl2aXR5XG4gICAgY29uc3Qgb3V0ZG9vclNjb3JlcyA9IGFjdGl2aXRpZXNcbiAgICAgIC5maWx0ZXIoYSA9PiBhLndlYXRoZXJTZW5zaXRpdmUpXG4gICAgICAubWFwKGEgPT4gY2FsY3VsYXRlQWN0aXZpdHlTY29yZShhLCBkYXkud2VhdGhlciwgZmFsc2UsIGZhbHNlKSk7XG4gICAgY29uc3QgaXNXZWF0aGVyR29vZCA9IG91dGRvb3JTY29yZXMuc29tZShzY29yZSA9PiBzY29yZSA+PSA2MCk7XG5cblxuXG4gICAgLy8gMS4gUGVyZmVjdCBvdXRkb29yIGFjdGl2aXRpZXNcbiAgICBjb25zdCBwZXJmZWN0T3V0ZG9vciA9IHN1Z2dlc3Rpb25zXG4gICAgICAuZmlsdGVyKHMgPT4gcy53ZWF0aGVyU2Vuc2l0aXZlICYmIHMuZXZhbHVhdGlvbiA9PT0gJ3BlcmZlY3QnKVxuICAgICAgLnNvcnQoKGEsIGIpID0+IGIuc2NvcmUgLSBhLnNjb3JlKTtcblxuICAgIGlmIChwZXJmZWN0T3V0ZG9vci5sZW5ndGggPj0gMTApIHtcbiAgICAgIGNvbnN0IHRvcDEwID0gcGVyZmVjdE91dGRvb3Iuc2xpY2UoMCwgMTApO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZGF0ZTogZGF5LmRhdGUsXG4gICAgICAgIHN1Z2dlc3Rpb25zOiB0b3AxMC5tYXAoKHsgd2VhdGhlclNlbnNpdGl2ZSwgLi4ucmVzdCB9KSA9PiByZXN0KSxcbiAgICAgICAgaGVyb0FjdGl2aXR5OiBzZWxlY3RIZXJvQWN0aXZpdHkodG9wMTAsIGlzRXZlbmluZylcbiAgICAgIH07XG4gICAgfVxuXG4gICAgLy8gMi4gR29vZCBvdXRkb29yIGFjdGl2aXRpZXNcbiAgICBjb25zdCBnb29kT3V0ZG9vciA9IHN1Z2dlc3Rpb25zXG4gICAgICAuZmlsdGVyKHMgPT4gcy53ZWF0aGVyU2Vuc2l0aXZlICYmIHMuZXZhbHVhdGlvbiA9PT0gJ2dvb2QnKVxuICAgICAgLnNvcnQoKGEsIGIpID0+IGIuc2NvcmUgLSBhLnNjb3JlKTtcblxuICAgIC8vIDMuIEFjY2VwdGFibGUgb3V0ZG9vciBhY3Rpdml0aWVzXG4gICAgY29uc3QgYWNjZXB0YWJsZU91dGRvb3IgPSBzdWdnZXN0aW9uc1xuICAgICAgLmZpbHRlcihzID0+IHMud2VhdGhlclNlbnNpdGl2ZSAmJiBzLmV2YWx1YXRpb24gPT09ICdhY2NlcHRhYmxlJylcbiAgICAgIC5zb3J0KChhLCBiKSA9PiBiLnNjb3JlIC0gYS5zY29yZSk7XG5cbiAgICAvLyA0LiBJbmRvb3IgYWN0aXZpdGllc1xuICAgIGNvbnN0IGluZG9vciA9IHN1Z2dlc3Rpb25zXG4gICAgICAuZmlsdGVyKHMgPT4gIXMud2VhdGhlclNlbnNpdGl2ZSlcbiAgICAgIC5zb3J0KChhLCBiKSA9PiBiLnNjb3JlIC0gYS5zY29yZSk7XG5cbiAgICAvLyBGaWxsIHVwIHRvIDEwIGluIG9yZGVyOiBwZXJmZWN0LCBnb29kLCBhY2NlcHRhYmxlLCBpbmRvb3JcbiAgICBjb25zdCBjb21iaW5lZDogdHlwZW9mIHN1Z2dlc3Rpb25zID0gW107XG4gICAgY29tYmluZWQucHVzaCguLi5wZXJmZWN0T3V0ZG9vcik7XG4gICAgaWYgKGNvbWJpbmVkLmxlbmd0aCA8IDEwKSB7XG4gICAgICBjb21iaW5lZC5wdXNoKC4uLmdvb2RPdXRkb29yLnNsaWNlKDAsIDEwIC0gY29tYmluZWQubGVuZ3RoKSk7XG4gICAgfVxuICAgIGlmIChjb21iaW5lZC5sZW5ndGggPCAxMCkge1xuICAgICAgY29tYmluZWQucHVzaCguLi5hY2NlcHRhYmxlT3V0ZG9vci5zbGljZSgwLCAxMCAtIGNvbWJpbmVkLmxlbmd0aCkpO1xuICAgIH1cbiAgICBpZiAoY29tYmluZWQubGVuZ3RoIDwgMTApIHtcbiAgICAgIGNvbWJpbmVkLnB1c2goLi4uaW5kb29yLnNsaWNlKDAsIDEwIC0gY29tYmluZWQubGVuZ3RoKSk7XG4gICAgfVxuICAgIGNvbnN0IHRvcDEwID0gY29tYmluZWQuc2xpY2UoMCwgMTApO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGRhdGU6IGRheS5kYXRlLFxuICAgICAgc3VnZ2VzdGlvbnM6IHRvcDEwLm1hcCgoeyB3ZWF0aGVyU2Vuc2l0aXZlLCAuLi5yZXN0IH0pID0+IHJlc3QpLFxuICAgICAgaGVyb0FjdGl2aXR5OiBzZWxlY3RIZXJvQWN0aXZpdHkodG9wMTAsIGlzRXZlbmluZylcbiAgICB9O1xuICB9KTtcbn1cbiJdLCJuYW1lcyI6WyJjYWxjdWxhdGVBY3Rpdml0eVNjb3JlIiwic2VsZWN0SGVyb0FjdGl2aXR5IiwiZ2V0U3VnZ2VzdGlvbnNCeURheSIsImZvcmVjYXN0IiwiaW50ZXJlc3RzIiwiYWN0aXZpdGllcyIsIm5vdyIsIkRhdGUiLCJBcnJheSIsImlzQXJyYXkiLCJkYXlzT2ZXZWVrIiwidG9kYXlOYW1lIiwiZ2V0RGF5IiwiY3VycmVudEhvdXIiLCJnZXRIb3VycyIsImlzVG9kYXlFdmVuaW5nIiwidG9kYXlUaW1lVGFnIiwidG9kYXlDb250ZXh0VGFncyIsIm1hcCIsImRheSIsImlkeCIsIm1vbnRoIiwiZGF0ZSIsImdldE1vbnRoIiwiaW5TZWFzb25BY3Rpdml0aWVzIiwiZmlsdGVyIiwiYWN0aXZpdHkiLCJzZWFzb25hbE1vbnRocyIsImxlbmd0aCIsImluY2x1ZGVzIiwic3VnZ2VzdGlvbnMiLCJhY3Rpdml0eUlkIiwiaWQiLCJzY29yZSIsIndlYXRoZXIiLCJpc1dlYXRoZXJHb29kIiwiaXNFdmVuaW5nIiwiZXZhbHVhdGlvbiIsIndlYXRoZXJTZW5zaXRpdmUiLCJpbmRvb3JBbHRlcm5hdGl2ZSIsImlzVG9kYXkiLCJ0b0RhdGVTdHJpbmciLCJvdXRkb29yU2NvcmVzIiwiYSIsInNvbWUiLCJwZXJmZWN0T3V0ZG9vciIsInMiLCJzb3J0IiwiYiIsInRvcDEwIiwic2xpY2UiLCJyZXN0IiwiaGVyb0FjdGl2aXR5IiwiZ29vZE91dGRvb3IiLCJhY2NlcHRhYmxlT3V0ZG9vciIsImluZG9vciIsImNvbWJpbmVkIiwicHVzaCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./utils/getSuggestionsByDay.ts\n"));

/***/ })

});